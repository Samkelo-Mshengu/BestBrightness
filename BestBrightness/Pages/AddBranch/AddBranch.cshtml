@page
@model BestBrightness.Pages.AddBranch.AddBranchModel
@{
    ViewData["Title"] = "Add Branch";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Add Branch</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-9aU8f5qZlHfEauXhQrpf8rW+UZu0ekR1VQ/wl5jmzN9AzYZg6Me0/v5z4yBpXy" crossorigin="anonymous">
</head>
<body>
    <div class="container">
        <h1 class="mt-5 mb-4">Add Branch</h1>
        <div class="card">
            <div class="card-header">
                Branch Information
            </div>
            <div class="card-body">
                <form id="addBranchForm" method="post">
                    <div class="mb-3">
                        @Html.LabelFor(model => model.AddBranchView.branch.BranchName, "Branch Name: ", htmlAttributes: new { @class = "font-weight-bold" })
                        @Html.TextBoxFor(model => model.AddBranchView.branch.BranchName, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.AddBranchView.branch.BranchName, "", new { @class = "text-danger" })
                    </div>
                    <div class="mb-3">
                        @Html.LabelFor(model => model.AddBranchView.branch.BranchLocation, "Branch Location: ", htmlAttributes: new { @class = "font-weight-bold" })
                        @Html.TextBoxFor(model => model.AddBranchView.branch.BranchLocation, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.AddBranchView.branch.BranchLocation, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group col-md-3 mb-1">
                        @Html.LabelFor(model => model.SelectedCountry, "Country: ", new { @class = "font-weight-bold" })
                        @if (Model.GetAllCountries != null)
                        {
                            @Html.DropDownListFor(model => model.SelectedCountry, Model.GetAllCountries.Select(c => new SelectListItem { Value = c.CountyID.ToString(), Text = c.CountyName }), "Please Select Country", new { @class = "form-control", id = "countryDropdown" })
                        }
                        else
                        {
                            <p>No countries available.</p>
                        }
                        @Html.ValidationMessageFor(model => model.SelectedCountry, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group col-md-3 mb-1" id="provinceDiv" style="display: none;">
                        @Html.LabelFor(model => model.SelectedProvince, "Province: ", new { @class = "font-weight-bold" })
                        @Html.DropDownListFor(model => model.SelectedProvince, Enumerable.Empty<SelectListItem>(), "Please Select Province", new { @class = "form-control", id = "provinceDropdown" })
                        @Html.ValidationMessageFor(model => model.SelectedProvince, "", new { @class = "text-danger" })
                    </div>
                    <button type="button" class="btn btn-primary" onclick="addBranch()">Add Branch <i class="fa fa-edit"></i></button>
                </form>
            </div>
        </div>
    </div>

    <!-- Modal -->
    <div class="modal fade" id="successModal" tabindex="-1" aria-labelledby="successModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="successModalLabel">Branch Created</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    The branch has been successfully created.
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>

    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js" integrity="sha384-w76A4HV6C0s5e1rYmO5Yv52qO6VLx1CT+PueU8HfB9eQQLrGo3wOf5pJUdI0y6CQ" crossorigin="anonymous"></script>
    <script>
        function addBranch() {
            $.ajax({
                url: $("#addBranchForm").attr("action"),
                type: "POST",
                data: $("#addBranchForm").serialize(),
                success: function (response) {
                    // Show the success modal
                    var successModal = new bootstrap.Modal(document.getElementById('successModal'));
                    successModal.show();
                },
                error: function (xhr, status, error) {
                    console.error('Error creating branch:', error);
                }
            });
        }

        $("#countryDropdown").change(function () {
            var selectedCountry = $(this).val();
            var provinceDropdown = $("#provinceDropdown");
            var provinceDiv = $("#provinceDiv");

            if (selectedCountry) {
                $.ajax({
                    url: `/Home/GetProvinces?selectedCountry=${selectedCountry}`,
                    type: "GET",
                    success: function (provinces) {
                        // Populate provinces dropdown
                        provinceDropdown.empty();
                        provinceDropdown.append("<option value=''>Please Select Province</option>");
                        $.each(provinces, function (index, province) {
                            provinceDropdown.append(`<option value="${province.provinceID}">${province.provinceName} ${province.city}</option>`);
                        });

                        // Show the provinces dropdown
                        provinceDiv.show();
                    },
                    error: function (xhr, status, error) {
                        console.error('Error fetching provinces:', error);
                    }
                });
            } else {
                // Hide the provinces dropdown if no country is selected
                provinceDiv.hide();
            }
        });
    </script>
</body>
</html>
