 @page
@model BestBrightness.Pages.AddBranch.AddBranchModel
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
   
    <title>Add Branch razor</title>
    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-9aU8f5qZgZlHfEauXhQrpf8rW+UZu0ekR1VQ/wl5jmzN9AzYZg6Me0/v5z4yBpXy" crossorigin="anonymous">
</head>
<body>
    <div class="container">
        @*method="post" id="addBranchForm" asp-page="AddBranch" asp-route-actions="addBranch"*@
        <h1 class="mt-5 mb-4">Add Branch</h1>
      @*   <form method="post" id="addBranchForm" asp-page="AddBranch" asp-route-actions="addBranch"> *@
        <div class="mb-3">
                @Html.LabelFor(model => model.AddBranchView.branch.BranchName, htmlAttributes: new { @class = "font-weight-bold" })
                @Html.TextBoxFor(model => model.AddBranchView.branch.BranchName, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.AddBranchView.branch.BranchName, "", new { @class = "text-danger" })
            </div>
            <div class="mb-3">
                @Html.LabelFor(model => model.AddBranchView.branch.BranchLocation, htmlAttributes: new { @class = "font-weight-bold" })
                @Html.TextBoxFor(model => model.AddBranchView.branch.BranchLocation, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.AddBranchView.branch.BranchLocation, "", new { @class = "text-danger" })
            </div>


        <form method="get" >
                <div class="form-group col-md-3 mb-1">
                    @Html.LabelFor(model => model.SelectedCountry, "Country: ", new { @class = "font-weight-bold" })
                    @Html.DropDownListFor(model => model.SelectedCountry, Model.GetAllCountries.Select(d => new SelectListItem()
               {
                   Value = d.CountyName,
                   Text = d.CountyName

               }), "Please Select Country", new { @class = "form-control", id = "countryDropdown", onchange = "submit()" })
                    @Html.ValidationMessageFor(model => model.SelectedCountry, "", new { @class = "text-danger" })
                </div>
            </form>

       

            @if (Model.GetAllProvince != null)
            {
                <div class="form-group col-md-3 mb-1">
                    <label for="ProvinceDropDown" class="font-weight-bold">Province:</label>
                    <select id="ProvinceDropDown" class="form-control">
                        <option selected>Please Select Province</option>
                        @foreach (var province in Model.GetAllProvince)
                        {
                            <option value="@province.ProvinceID">@province.ProvinceName+" "+@province.City</option>
                        }
                    </select>
                </div>
            }


        <button type="button" onclick="OnPostAsync()" class="btn btn-primary">Add Branch <i class="fa fa-edit"></i></button>

@*         </form> *@
        @section Scripts {
 

               <script src="https://code.jquery.com/jquery-3.6.0.min.js" ></script>
            <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js" integrity="sha384-hW/4rZon3n8h5bwvTNFzPEoIxuAKgIxvwG2mfdkmgp0qki+Ch/vGtga4p1KIbcNU" crossorigin="anonymous"></script>
            <script>
                $(document).ready(function () {
                    $("#countryDropdown").change(function () {
                        var selectedCountry = $(this).val();
                        if (selectedCountry) {
                            $.ajax({
                                url: '@Url.Page("AddBranch", "OnGetProvincesAsync")',
                                type: 'GET',
                                data: { selectedCountry: selectedCountry },
                                success: function (response) {
                                    var $provinceDropdown = $('#ProvinceDropDown');
                                    $provinceDropdown.empty();
                                    $provinceDropdown.append('<option selected>Please Select Province</option>');
                                    $.each(response, function (i, province) {
                                        $provinceDropdown.append('<option value="' + province.value + '">' + province.text + '</option>');
                                    });
                                    $("#provinceDiv").show();
                                },
                                error: function (xhr, status, error) {
                                    console.error("Error: " + xhr.responseText);
                                }
                            });
                        } else {
                            $("#provinceDiv").hide();
                        }
                    });
                });
    
 </script>

            <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js" integrity="sha384-hW/4rZon3n8h5bwvTNFzPEoIxuAKgIxvwG2mfdkmgp0qki+Ch/vGtga4p1KIbcNU" crossorigin="anonymous"></script>
}
           
        
    </div>

    
</body>
</html>

